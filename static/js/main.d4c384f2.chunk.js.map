{"version":3,"sources":["components/NavBar/NavBar.tsx","redux/actions/actionTypes.ts","utils/formatDate.ts","components/AddTodo/AddTodo.tsx","redux/actions/actions.ts","components/TodoList/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","App.tsx","redux/reducers/reducers.ts","redux/saga/saga.ts","redux/store/store.ts","styles/GlobalStyles.tsx","index.tsx"],"names":["Nav","styled","nav","NavBar","FETCH_ALL","ADD_TODO","FETCH_TODO_BY_ID","EDIT_TODO","DELETE_TODO","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","useStyles","makeStyles","theme","createStyles","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","AddTodoForm","form","AddTodo","classes","useState","setDate","today","dispatch","useDispatch","useForm","register","handleSubmit","onSubmit","data","e","newTodo","title","text","endDate","type","payload","console","log","target","reset","defaultValue","TextField","id","label","onChange","value","className","InputLabelProps","shrink","htmlFor","Todo","div","Input","input","Button","button","getModalStyle","top","left","transform","paper","position","backgroundColor","palette","background","borderRadius","boxShadow","shadows","padding","TodoItem","todo","todoSelector","useSelector","state","React","modalStyle","open","setOpen","handleClose","onClick","Modal","onClose","createdAt","editTodo","style","TodoList","todosInState","todos","map","key","Section","section","App","useEffect","initialState","rootReducer","action","filter","fetchAllAsync","addTodoAsync","editTodoAsync","fetchTodoByIdAsync","deleteTodoAsync","rootSaga","fakeFetch","response","a","ms","Promise","resolve","setTimeout","storeKey","getPersistedState","persistedState","localStorage","getItem","JSON","parse","saveState","setItem","stringify","addTodo","currentId","Math","max","push","getTodoById","find","editedTodo","updatedState","deleteTodo","removedTodo","put","takeEvery","middleware","createSagaMiddleware","currentState","store","createStore","compose","applyMiddleware","run","GlobalStyles","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4c384f2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport AlarmIcon from \"@material-ui/icons/Alarm\";\r\n\r\nexport const Nav = styled.nav`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 75%;\r\n  padding: 1em;\r\n\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <Nav>\r\n      <h1>\r\n        TODO LIST <AlarmIcon />\r\n      </h1>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","export const FETCH_ALL = \"FETCH_ALL\";\r\nexport const FETCH_ALL_ASYNC = \"FETCH_ALL_ASYNC\";\r\nexport const ADD_TODO = \"ADD_TODO\";\r\nexport const ADD_TODO_ASYNC = \"ADD_TODO_ASYNC\";\r\nexport const FETCH_TODO_BY_ID = \"FETCH_TODO_BY_ID\";\r\nexport const FETCH_TODO_BY_ID_ASYNC = \"FETCH_TODO_BY_ID_ASYNC\";\r\nexport const EDIT_TODO = \"EDIT_TODO\";\r\nexport const EDIT_TODO_ASYNC = \"EDIT_TODO_ASYNC\";\r\nexport const DELETE_TODO = \"DELETE_TODO\";\r\nexport const DELETE_TODO_ASYNC = \"DELETE_TODO_ASYNC\";\r\nexport const GET_TODOS_REQUEST = \"GET_TODOS_REQUEST\";\r\nexport const GET_TODOS_SUCCESS = \"GET_TODOS_SUCCESS\";\r\nexport const GET_TODOS_FAILURE = \"GET_TODOS_FAILURE\";\r\n","export const formatDate = (date: Date) => {\r\n  let d = new Date(date),\r\n    month = \"\" + (d.getMonth() + 1),\r\n    day = \"\" + d.getDate(),\r\n    year = d.getFullYear();\r\n\r\n  if (month.length < 2) month = \"0\" + month;\r\n  if (day.length < 2) day = \"0\" + day;\r\n\r\n  return [year, month, day].join(\"-\");\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { addTodo } from \"../../redux/actions/actions\";\r\nimport { INewTodo } from \"../../types/ITodo\";\r\nimport { formatDate } from \"../../utils/formatDate\";\r\nimport styled from \"styled-components\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: 200,\r\n    },\r\n  })\r\n);\r\n\r\nconst AddTodoForm = styled.form`\r\n  display: flex;\r\n  width: 40%;\r\n  // min-width: 20rem;\r\n  flex-direction: column;\r\n  border-radius: 0.5em;\r\n  background-color: #eaeefb;\r\n  padding: 1em;\r\n  label {\r\n    font-weight: bold;\r\n    padding: 0.3em;\r\n  }\r\n\r\n  input {\r\n    padding: 0.5em;\r\n  }\r\n\r\n  button {\r\n    padding: 0.7em 0;\r\n    background-color: #1b274e;\r\n    color: #fff;\r\n    margin-top: 1em;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst AddTodo = () => {\r\n  const classes = useStyles();\r\n  const [date, setDate] = useState<Date>(new Date());\r\n  const today = formatDate(date);\r\n  const handleChange = (e: any) => {\r\n    setDate(e.target.value);\r\n    console.log(e.target.value);\r\n  };\r\n  const dispatch = useDispatch();\r\n  const { register, handleSubmit } = useForm<INewTodo>();\r\n  const onSubmit = (data: INewTodo, e: any) => {\r\n    const newTodo = {\r\n      title: data.title,\r\n      text: data.text,\r\n      endDate: data.endDate,\r\n    };\r\n    dispatch(addTodo(newTodo));\r\n    console.log(newTodo);\r\n    e.target.reset();\r\n  };\r\n\r\n  return (\r\n    <AddTodoForm onSubmit={handleSubmit(onSubmit)} defaultValue=\"\">\r\n      <TextField\r\n        {...register(\"endDate\")}\r\n        id=\"date\"\r\n        label=\"마감일\"\r\n        type=\"endDate\"\r\n        defaultValue={today}\r\n        onChange={handleChange}\r\n        className={classes.textField}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n      />\r\n      <label htmlFor=\"title\">할일</label>\r\n      <input type=\"text\" {...register(\"title\")} />\r\n\r\n      <label htmlFor=\"text\">세부사항</label>\r\n      <input type=\"text\" {...register(\"text\")} />\r\n\r\n      <button type=\"submit\">추가</button>\r\n    </AddTodoForm>\r\n  );\r\n};\r\n\r\nexport default AddTodo;\r\n","import {\r\n  ADD_TODO,\r\n  DELETE_TODO,\r\n  EDIT_TODO,\r\n  FETCH_ALL,\r\n  FETCH_TODO_BY_ID,\r\n} from \"./actionTypes\";\r\nimport ITodo, { INewTodo } from \"../../types/ITodo\";\r\nimport {\r\n  AddTodoActionType,\r\n  DeleteTodoActionType,\r\n  EditTodoActionType,\r\n  FetchAllActionType,\r\n  FetchTodoByIdActionType,\r\n} from \"../../types/IActionTypes\";\r\n\r\nexport function fetchAll(): FetchAllActionType {\r\n  return {\r\n    type: FETCH_ALL,\r\n  };\r\n}\r\n\r\nexport function fetchTodoById(id: ITodo[\"id\"]): FetchTodoByIdActionType {\r\n  return {\r\n    type: FETCH_TODO_BY_ID,\r\n    payload: id,\r\n  };\r\n}\r\n\r\nexport function addTodo(todo: INewTodo): AddTodoActionType {\r\n  return {\r\n    type: ADD_TODO,\r\n    payload: todo,\r\n  };\r\n}\r\n\r\nexport function editTodo(todo: ITodo): EditTodoActionType {\r\n  return {\r\n    type: EDIT_TODO,\r\n    payload: { ...todo },\r\n  };\r\n}\r\n\r\nexport function deleteTodo(id: ITodo[\"id\"]): DeleteTodoActionType {\r\n  return {\r\n    type: DELETE_TODO,\r\n    payload: id,\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { SubmitHandler, useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ITodo from \"../../../types/ITodo\";\r\nimport ITodoState from \"../../../types/ITodoState\";\r\nimport { editTodo } from \"../../../redux/actions/actions\";\r\nimport { deleteTodo, fetchTodoById } from \"../../../redux/actions/actions\";\r\nimport CreateOutlinedIcon from \"@material-ui/icons/CreateOutlined\";\r\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const Todo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  background-color: #fff;\r\n  padding: 1em;\r\n  border-radius: 0.5em;\r\n\r\n  margin-bottom: 1em;\r\n  div {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  button {\r\n    margin: 0 0.25em;\r\n    padding: 0.3em 0.5em;\r\n  }\r\n  button:first-of-type {\r\n    background-color: #007f5f;\r\n  }\r\n  button:last-of-type {\r\n    background-color: #e63946;\r\n  }\r\n  small {\r\n    margin-top: 0.3em;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 0.5em;\r\n  margin: 0.5em 0;\r\n  border: 1px solid black;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  padding: 0.5em;\r\n  background-color: #1b274e;\r\n  display: block;\r\n  margin-top: 0.5em;\r\n  width: 100%;\r\n`;\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 300,\r\n    backgroundColor: theme.palette.background.paper,\r\n    borderRadius: \"0.5em\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nconst TodoItem = (todo: ITodo) => {\r\n  const dispatch = useDispatch();\r\n  const { register, handleSubmit } = useForm<ITodo>();\r\n  const todoSelector = useSelector((state: ITodoState) => state.todo);\r\n  const onSubmit: SubmitHandler<ITodo> = (data) => {\r\n    data.id = todoSelector?.id as ITodo[\"id\"];\r\n    data.createdAt = todoSelector?.createdAt as ITodo[\"createdAt\"];\r\n    data.endDate = todoSelector?.endDate as ITodo[\"endDate\"];\r\n    dispatch(editTodo(data));\r\n    handleClose();\r\n  };\r\n\r\n  const classes = useStyles();\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Todo>\r\n      <div>\r\n        <h3>{todo.title}</h3>\r\n        <div>\r\n          <button\r\n            onClick={() => {\r\n              dispatch(fetchTodoById(todo.id));\r\n              handleOpen();\r\n            }}\r\n          >\r\n            <CreateOutlinedIcon />\r\n          </button>\r\n\r\n          <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n          >\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n              <div style={modalStyle} className={classes.paper}>\r\n                <h3 id=\"simple-modal-title\">수정하기</h3>\r\n                <Input\r\n                  type=\"text\"\r\n                  {...register(\"title\")}\r\n                  defaultValue={todo?.title}\r\n                />\r\n                <p id=\"simple-modal-description\"></p>\r\n                <Input\r\n                  type=\"text\"\r\n                  {...register(\"text\")}\r\n                  defaultValue={todo?.text}\r\n                />\r\n                <Button type=\"submit\" value=\"Submit\">\r\n                  완료\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          </Modal>\r\n\r\n          <button\r\n            onClick={() => {\r\n              dispatch(deleteTodo(todo.id));\r\n            }}\r\n          >\r\n            <DeleteOutlineOutlinedIcon />\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <small>{todo.text}</small>\r\n\r\n        <small>\r\n          {todo.createdAt} {todo.endDate}\r\n        </small>\r\n      </div>\r\n    </Todo>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from \"react\";\r\nimport ITodoState from \"../../types/ITodoState\";\r\nimport ITodo from \"../../types/ITodo\";\r\nimport TodoItem from \"./TodoItem/TodoItem\";\r\n\r\nconst TodoList = (todosInState: ITodoState) => {\r\n  const todos = (todosInState.todos || []).map((todo: ITodo) => (\r\n    <TodoItem {...todo} key={todo.id} />\r\n  ));\r\n  return <section style={{ width: \"55%\" }}>{todos}</section>;\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport NavBar from \"./components/NavBar/NavBar\";\r\nimport AddTodo from \"./components/AddTodo/AddTodo\";\r\nimport ITodoState from \"./types/ITodoState\";\r\nimport TodoList from \"./components/TodoList/TodoList\";\r\nimport { fetchAll } from \"./redux/actions/actions\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Section = styled.section`\r\n  width: 75%;\r\n\r\n  margin: 0 auto;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: #4e50b7;\r\n  padding: 2em;\r\n  border-radius: 0.5em;\r\n`;\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  const todosInState: ITodoState = {\r\n    todos: useSelector((state: ITodoState) => state.todos),\r\n  };\r\n  useEffect(() => {\r\n    dispatch(fetchAll());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <Section>\r\n        <AddTodo />\r\n\r\n        <TodoList {...todosInState} />\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import {\r\n  AddTodoAsyncActionType,\r\n  DeleteTodoAsyncActionType,\r\n  EditTodoActionType,\r\n  FetchAllActionType,\r\n  FetchTodoByIdActionType,\r\n  FetchTodoByIdAsyncActionType,\r\n} from \"../../types/IActionTypes\";\r\nimport ITodoState from \"../../types/ITodoState\";\r\n\r\nconst initialState: ITodoState = {\r\n  todos: [],\r\n};\r\n\r\ntype ActionType =\r\n  | FetchAllActionType\r\n  | AddTodoAsyncActionType\r\n  | FetchTodoByIdAsyncActionType\r\n  | FetchTodoByIdActionType\r\n  | EditTodoActionType\r\n  | DeleteTodoAsyncActionType;\r\n\r\nconst rootReducer = (state = initialState, action: ActionType): ITodoState => {\r\n  switch (action.type) {\r\n    case \"FETCH_ALL_ASYNC\":\r\n      if (action.payload) {\r\n        return { todos: action.payload };\r\n      }\r\n      return { todos: [] };\r\n\r\n    case \"ADD_TODO_ASYNC\":\r\n      if (state.todos) {\r\n        return { todos: [...state.todos, action.payload] };\r\n      }\r\n      return { todos: [action.payload] };\r\n\r\n    case \"FETCH_TODO_BY_ID\":\r\n      return { todos: state.todos }; // clear task\r\n    case \"FETCH_TODO_BY_ID_ASYNC\":\r\n      if (state.todos) {\r\n        return { ...state, todo: action.payload };\r\n      }\r\n      return { ...state };\r\n\r\n    case \"EDIT_TODO_ASYNC\":\r\n      if (state.todos) {\r\n        const todos = state.todos.map((todo) => {\r\n          if (todo.id === action.payload.id) {\r\n            todo.title = action.payload.title;\r\n            todo.text = action.payload.text;\r\n          }\r\n          return todo;\r\n        });\r\n        return { todos: [...todos] };\r\n      }\r\n      return { ...state };\r\n\r\n    case \"DELETE_TODO_ASYNC\":\r\n      if (state.todos) {\r\n        const todos = state.todos.filter(\r\n          (todo) => todo.id !== action.payload.id\r\n        );\r\n        return { todos: [...todos] };\r\n      }\r\n      return { ...state };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n","import { put, takeEvery } from \"redux-saga/effects\";\r\nimport { formatDate } from \"../../utils/formatDate\";\r\nimport {\r\n  ADD_TODO,\r\n  ADD_TODO_ASYNC,\r\n  DELETE_TODO,\r\n  DELETE_TODO_ASYNC,\r\n  EDIT_TODO,\r\n  EDIT_TODO_ASYNC,\r\n  FETCH_ALL,\r\n  FETCH_ALL_ASYNC,\r\n  FETCH_TODO_BY_ID,\r\n  FETCH_TODO_BY_ID_ASYNC,\r\n} from \"../actions/actionTypes\";\r\nimport {\r\n  AddTodoActionType,\r\n  DeleteTodoActionType,\r\n  EditTodoActionType,\r\n  FetchTodoByIdActionType,\r\n} from \"../../types/IActionTypes\";\r\nimport ITodo, { INewTodo } from \"../../types/ITodo\";\r\n\r\nexport interface ResponseGenerator {\r\n  config?: any;\r\n  data?: any;\r\n  headers?: any;\r\n  request?: any;\r\n  status?: number;\r\n  statusText?: string;\r\n}\r\n\r\n// imitate server call\r\nasync function fakeFetch(response: any, ms = 300) {\r\n  return new Promise((resolve) => {\r\n    console.log(\"res\", resolve);\r\n    setTimeout(() => {\r\n      resolve(response);\r\n    }, ms);\r\n  });\r\n}\r\n\r\nconst storeKey = \"todos\";\r\nconst getPersistedState = () => {\r\n  const persistedState = localStorage.getItem(storeKey);\r\n  return persistedState ? (JSON.parse(persistedState) as ITodo[]) : [];\r\n};\r\nconst saveState = (todos: ITodo[]): void => {\r\n  localStorage.setItem(storeKey, JSON.stringify(todos));\r\n};\r\n\r\nconst addTodo = (newTodo: INewTodo): ITodo => {\r\n  const persistedState = getPersistedState();\r\n  const currentId = persistedState.length\r\n    ? Math.max(...persistedState.map((todo) => todo.id || 0))\r\n    : 0;\r\n  const todo = {\r\n    ...newTodo,\r\n    id: currentId + 1,\r\n    createdAt: formatDate(new Date()),\r\n  };\r\n  persistedState.push(todo);\r\n  saveState(persistedState);\r\n  return todo;\r\n};\r\n\r\nconst getTodoById = (id: ITodo[\"id\"]): ITodo => {\r\n  const persistedState = getPersistedState();\r\n  const currentTodo = persistedState.find((todo) => todo.id === id) as ITodo;\r\n  return currentTodo;\r\n};\r\n\r\nconst editTodo = (editedTodo: ITodo): ITodo => {\r\n  const persistedState = getPersistedState();\r\n  const updatedState = persistedState.map((todo) => {\r\n    if (todo.id === editedTodo.id) {\r\n      todo.title = editedTodo.title;\r\n      todo.text = editedTodo.text;\r\n    }\r\n    return todo;\r\n  });\r\n  saveState(updatedState);\r\n  return editedTodo;\r\n};\r\n\r\nconst deleteTodo = (id: ITodo[\"id\"]): ITodo | null => {\r\n  const persistedState = getPersistedState();\r\n  const removedTodo = persistedState.find((todo) => todo.id === id) || null;\r\n  const todos = persistedState.filter((todo) => todo.id !== id);\r\n  saveState(todos);\r\n  return removedTodo;\r\n};\r\n\r\nexport function* fetchAllAsync() {\r\n  const state = getPersistedState();\r\n  const response: ResponseGenerator = yield fakeFetch(state);\r\n\r\n  console.log(response.data);\r\n  yield put({ type: FETCH_ALL_ASYNC, payload: response });\r\n}\r\n\r\nexport function* addTodoAsync(action: AddTodoActionType) {\r\n  const todo = addTodo(action.payload);\r\n  // we can also return full list of tasks\r\n  // yield fetchAllAsync();\r\n\r\n  const response: ResponseGenerator = yield fakeFetch(todo);\r\n  console.log(response.data);\r\n  yield put({ type: ADD_TODO_ASYNC, payload: response });\r\n}\r\n\r\nexport function* editTodoAsync(action: EditTodoActionType) {\r\n  const editedTodo = editTodo(action.payload);\r\n  // we can also return full list of tasks\r\n  // yield fetchAllAsync();\r\n\r\n  const response: ResponseGenerator = yield fakeFetch(editedTodo);\r\n  console.log(response.data);\r\n  yield put({ type: EDIT_TODO_ASYNC, payload: response });\r\n}\r\n\r\nexport function* fetchTodoByIdAsync(action: FetchTodoByIdActionType) {\r\n  const todo = getTodoById(action.payload);\r\n  const response: ResponseGenerator = yield fakeFetch(todo);\r\n  console.log(response.data);\r\n  yield put({ type: FETCH_TODO_BY_ID_ASYNC, payload: response });\r\n}\r\n\r\nexport function* deleteTodoAsync(action: DeleteTodoActionType) {\r\n  const removedTodo = deleteTodo(action.payload);\r\n  // we can also return full list of tasks\r\n  // yield fetchAllAsync();\r\n\r\n  const response: ResponseGenerator = yield fakeFetch(removedTodo);\r\n  console.log(response.data);\r\n  yield put({ type: DELETE_TODO_ASYNC, payload: response });\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield takeEvery(FETCH_ALL, fetchAllAsync);\r\n  yield takeEvery(FETCH_TODO_BY_ID, fetchTodoByIdAsync);\r\n  yield takeEvery(ADD_TODO, addTodoAsync);\r\n  yield takeEvery(EDIT_TODO, editTodoAsync);\r\n  yield takeEvery(DELETE_TODO, deleteTodoAsync);\r\n}\r\n","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootReducer from \"../reducers/reducers\";\r\nimport rootSaga from \"../saga/saga\";\r\nimport ITodoState from \"../../types/ITodoState\";\r\n\r\nconst middleware = createSagaMiddleware();\r\n\r\nconst defaultState: ITodoState = { todos: [] };\r\n\r\nconst currentState = defaultState;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  currentState,\r\n  compose(applyMiddleware(middleware))\r\n);\r\n\r\nmiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyles = createGlobalStyle` \r\n    *{\r\n        margin: 0;\r\n        padding: 0;\r\n        box-sizing: border-box;\r\n    }\r\n    body {\r\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        background-color: #fff;\r\n        color: #000;\r\n        \r\n    }\r\n    button {\r\n        background-color: transparent;\r\n        border: none;\r\n        outline: none;\r\n        cursor: pointer;\r\n        border-radius: 0.3em;\r\n        color: #fff;\r\n    }\r\n\r\n`;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store/store\";\r\nimport { GlobalStyles } from \"./styles/GlobalStyles\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <GlobalStyles />\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}